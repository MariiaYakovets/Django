"СТРУКТУРА":
установить приложение в settings.py- добавить строку с названием приложения в список installed_apps[]
управление проекта идет через manage.py

модель- табличка в бд, могут иметь разные поля(CharField, IntField, URLField etc), 
модель можно создать в приложение в файле models.py
синхронизация/перенос моделей в бд-  миграция

views- связующее звено между моделями, html шаблонами и респонсом
во views пишем функции, которые будут обрабатывать запросы

urls- ссылки направляют на нужную вьюшку, там пишем ссылки по нашему вебсайту
admin- интерфейс базы данных- admin.site.register(модель) регестрация/добавление моделей в админку


"КОМАНДЫ":
перемещение по папкам в терминале- 
;cd (название папки), 
;cd .. (вернуться на папку назад), 
;ls (список всех папок и файлов - dir для Windows)
создание проекта- django-admin startproject ...(name)
создание приложения- python3 manage.py startapp ...(name)
создать миграцию - python3 manage.py makemigration
провести миграцию - python3 manage.py migrate
команда в терминале для регистрации администратора - python3 manage.py createsuperuser  


"РАБОТА С МОДЕЛЬЮ":
модель.objects - все обькты модели 
модель.objects.all() - получение списка обьктов

"РАБОТА С VIEW":
функции view принимают request
context - данные, которые передаются в html шаблон. Тип данных - Dict (словарь)
render(request, template_name, context)